plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
}

loom {
    splitEnvironmentSourceSets()

	mods {
		"proxchat" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

	accessWidenerPath = file("src/main/resources/proxchat.accesswidener")
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	//include modImplementation(fileTree(dir: "../ProxLib/build/libs", include: "proxlib-0.1.0.jar"))
	include modApi("maven.modrinth:proxlib:0.2.1+1.21.5")

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"

	modApi "maven.modrinth:patpat:1.1.1+1.21.5"
	modApi "maven.modrinth:emotecraft:2.6.1+1.21.5-fabric"
	modApi "maven.modrinth:playeranimator:2.0.3+1.21.4-fabric" // Embedded dependency of Emotecraft

	// Brotli based compression
	def brotliVersion = "1.9.0"
	modCompileOnly include("com.aayushatharva.brotli4j:brotli4j:$brotliVersion")
	modRuntimeOnly include("com.aayushatharva.brotli4j:native-windows-x86_64:$brotliVersion")
	modRuntimeOnly include("com.aayushatharva.brotli4j:native-linux-x86_64:$brotliVersion")
	modRuntimeOnly include("com.aayushatharva.brotli4j:native-linux-aarch64:$brotliVersion")
	modRuntimeOnly include("com.aayushatharva.brotli4j:native-osx-x86_64:$brotliVersion")
	modRuntimeOnly include("com.aayushatharva.brotli4j:native-osx-aarch64:$brotliVersion");
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
}
